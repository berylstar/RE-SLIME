2023.05.05		RE-SLIME 개발 1일차 = 3시간
작년말에 하던 리슬라임 프로젝트를 처음부터 다시 해보기로 마음 먹었다. 이번에는 원래 구현하고자 하는 것들을 모두 구현하고 싶은 욕심으로 마무리를 잘 해봐야 겠다. 오랜만에 다시 게임 개발에 집중하니까 재미있다.
- 기본적인 카메라와 캔버스 세팅으로 화면비를 1366:768 으로 설정했다.
- 플레이어 움직임 스크립트를 다시 봤는데 MovingObject와 BoardManager의 GridPosition은 별개다. = MovingObject는 직접 좌표를 입력해 움직이고, GridPosition은 무언가를 배치할 때만 이용하는 듯하다.
- 카메라의 사이즈를 바꿔서 멀리 찍는지 가까이 찍는지 바꿀 수 있다.

2023.05.06		RE-SLIME 개발 2일차 = 3시간
- 여러 몬스터들을 스크립트별로 나눌 예정. MonsterScript를 상속받아 자식 스크립트로 만들 예정.
- Punch 스크립트를 따로 만들지 않고 PlayerScript 내에서 구현.
- static : 실행과 동시에 스태틱 메모리 공간에 저장
- 플레이어 HP, AP, floor 등 변수들을 static으로 해서 관리 예정

2023.05.09		RE-SLIME 개발 3일차 = 2.5시간
- Stair 오브젝트 추가. 프리팹이 아니라 하이라키창에 오브젝트로 나둬야지 열고닫고 할 수 있음.
- UI 조금 추가
- PlayerDie 애니메이션 추가
- Time.timescale = 0; 을 이용해서 일시정지 기능 구현 가능 ?
- PlayerScript에 몬스터와 충돌감지 넣었더니 펀치도 맞는 걸로 인식됨 -> 펀치 따로 분리해서 실험할 예정

2023.05.10		RE-SLIME 개발 4일차 = 1.5시간
- 펀치랑 플레이어랑 분리
- GameController 에 게임시스템 변수를 static으로 넣어서 관리. pause 변수를 넣어서 Time.timescale = 0인지 아닌지 판별
- Stair 오브젝트 관련 디테일화

2023.05.11		RE-SLIME 개발 5일차 = 3.5시간
- StopAllCoroutines를 통해서 몬스터가 죽어도 이동하는 것 방지
- 플레이어 죽어서 부활하는 것까지 구현. 나중에 게임오버 구현할 예정
- NPC 킹슬라임과 상점관 구현할 예정
- Stair과 충돌인식으로 NextFloor함수를 불러오는 과정에서 플레이어의 좌표값이 정수가 아닌값이 들어가는 오류 발견
- 몬스터가 죽으면 ItemDrop 함수 BoardManager 스크립트에 구현 완료
- SculptureScript 구현할 예정. 거미줄은 느려지게 같은 효과

2023.05.12		RE-SLIME 개발 6일차 = 3시간
- 전체적인 스크립트 한번 정리하는 시간
- 거미줄 같은 조형물 효과가 없어지도록 코루틴 안에 넣어놨는데, 그게 실행되기 전에 오브젝트가 사라지면 효과가 계속 남는 오류 발견.
- 골렘같은 가로 크기가 2 이상인 MovingObject에 대해 어떻게 적용할 것인지 고민해봐야 함.

2023.05.18		RE-SLIME 개발 7일차 = 2.5시간
- 거미줄 관련 오류 수정 -> tempSpeed 변수를 만들어 일시적으로 값을 저장하다가 다시 돌아오도록. -> 근데 다시 오류 발견 2개 이상 밟으면 이동속도 영구감소
- MonsterShooter 구현 중
- 프리팹에서 참조할때 하이라키에 있는 오브젝트는 불가능하지만, 프리팹으로 저장된 오브젝트는 가능하다.

2023.05.19		RE-SLIME 개발 8일차 = 3.5시간
- MonsterShooter & BulletScript 개발 완료
- speedStack을 만들어 여러 거미줄 효과도 받을 수 있도록 설정
- MonsterSpawner 구현 완료
- MonsterDash 구현 완료

2023.05.21		RE-SLIME 개발 9일차 = 6시간
- 플레이어 피격시 무적 추가
- 플레이어 움직이는 모션 세부화
- MonsterDash 오류 해결
- 오늘은 주로 디자인적인 부분에서 가지고 놀았음
- NPC 기본 틀만 구현 -> 이번주 내로 완성해야 함

2023.05.25		RE-SLIME 개발 10일차 = 4시간
- 튜토리얼 스크립트 구현 완료
- ESC Paenl 구현 완료
- Canvas에서는 anchoredPosition을 사용한다.
- 장비 구현에 대해 생각해보자
